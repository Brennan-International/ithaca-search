name: PHPUnit tests

# Run PHPUnit tests on every pull request and push to the staging or main/master branch
on:
  push:
    branches:
      - staging
      - main
      - master

  pull_request:
    branchess:
      - staging
      - main
      - master

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  run-phpunit-tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Mark /app as safe directory
        run: git config --global --add safe.directory /app
      
      - uses: actions/setup-node@v4
        with:
          cache: "npm"
        
      - name: "Restore Composer cache"
        uses: actions/cache@v4
        with:
          path: vendor
          key: composer-${{ runner.os }}-8.3-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            composer-${{ runner.os }}-8.3-

      - name: "Restore npm cache"
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: npm-${{ runner.os }}-20-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            npm-${{ runner.os }}-20-

      - uses: php-actions/composer@v6

      
      - name: "Install npm deps"
        run: npm ci

      # todo: change this to local
      - name: Install wp-env globally
        run: npm install -g @wordpress/env

      - name: "Start wp-env environment"
        run: npm run wp-env:start

      - name: Run PHPUnit tests and collect results
        run: |
          set +e
          npm run test:phpunit
          TEST_EXIT_CODE=$?
          set -e

          RESULTS_FILE="wp-content/plugins/ithaca-search/test-results.xml"

          if [ -f "$RESULTS_FILE" ]; then
            ERRORS=$(grep -o 'errors="[^"]*"' "$RESULTS_FILE" | head -n1 | cut -d'"' -f2)
            FAILURES=$(grep -o 'failures="[^"]*"' "$RESULTS_FILE" | head -n1 | cut -d'"' -f2)
            TESTS=$(grep -o 'tests="[^"]*"' "$RESULTS_FILE" | head -n1 | cut -d'"' -f2)

            {
              echo "## PHPUnit Results"
              echo "**Tests**: $TESTS"
              echo "**Failures**: $FAILURES"
              echo "**Errors**: $ERRORS"
            } >> $GITHUB_STEP_SUMMARY
          else
            echo "No test results found." >> $GITHUB_STEP_SUMMARY
          fi

          exit $TEST_EXIT_CODE